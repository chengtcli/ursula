heat_template_version: 2013-05-23

description: HOT template to deploy Ursula Tests env

# Note: there should be a placeholder line after each "if-else" block to keep the right format of the template

parameters:
  image:
    type: string
    description: Name of image to use for servers
    default: {{ ansible_env.IMAGE_ID | default('rhel7.3') }}
  flavor:
    type: string
    description: Flavor to use for servers
    default: {{ ansible_env.testenv_flavor | default('m1.xlarge') }}
  storage_flavor:
    type: string
    description: Flavor to use for servers
    default: {{ ansible_env.testenv_storage_flavor | default('ci_ceph_swift') }}
  network:
    type: string
    description: Name of Neutron network into which servers get deployed
    default: {{ ansible_env.testenv_network | default('internal') }}
  floating_ip_pool:
    type: string
    description: Name of floating ip pool to use
    default: {{ ansible_env.testenv_floating_ip_pool | default('external') }}
  key_name:
    type: string
    description: Name of the ssh keypair to use for servers
    default: {{ ansible_env.testenv_instance_prefix }}_key
  security_group:
    type: string
    description: Name of the security group to use for servers
    default: {{ ansible_env.testenv_instance_prefix }}_ursula
  controller-0_name:
    type: string
    description: Name of controller-0 server
    default: {{ ansible_env.testenv_instance_prefix }}-controller-0
  controller-1_name:
    type: string
    description: Name of controller-1 server
    default: {{ ansible_env.testenv_instance_prefix }}-controller-1
  compute-0_name:
    type: string
    description: Name of compute-0 server
    default: {{ ansible_env.testenv_instance_prefix }}-compute-0
  cpm1_name:
    type: string
    description: Name of cpm1 server
    default: {{ ansible_env.testenv_instance_prefix }}-cpm1
  cpm2_name:
    type: string
    description: Name of cpm2 server
    default: {{ ansible_env.testenv_instance_prefix }}-cpm2
  cpm3_name:
    type: string
    description: Name of cpm3 server
    default: {{ ansible_env.testenv_instance_prefix }}-cpm3
  ceph1_name:
    type: string
    description: Name of ceph1 server
    default: {{ ansible_env.testenv_instance_prefix }}-ceph1
  ceph2_name:
    type: string
    description: Name of ceph2 server
    default: {{ ansible_env.testenv_instance_prefix }}-ceph2
  ceph3_name:
    type: string
    description: Name of ceph3 server
    default: {{ ansible_env.testenv_instance_prefix }}-ceph3

resources:

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Security group for servers of Ursula Tests
      name: { get_param: security_group }
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 35357
          port_range_max: 35357
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 5000
          port_range_max: 5000
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 6080
          port_range_max: 6080
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 8774
          port_range_max: 8774
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 8776
          port_range_max: 8776
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 8777
          port_range_max: 8777
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 9393
          port_range_max: 9393
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 9292
          port_range_max: 9292
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 9696
          port_range_max: 9696
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
        - ethertype: 'IPv4'
          remote_mode: 'remote_group_id'
        - ethertype: 'IPv6'
          remote_mode: 'remote_group_id'

  ssh_keypair:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: { get_param: key_name }

  controller-0:
    type: OS::Nova::Server
    properties:
      name: { get_param: controller-0_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line

  controller-1:
    type: OS::Nova::Server
    properties:
      name: { get_param: controller-1_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line

  compute-0:
    type: OS::Nova::Server
    properties:
      name: { get_param: compute-0_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line

  cpm1:
    type: OS::Nova::Server
    properties:
      name: { get_param: cpm1 }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line

  cpm2:
    type: OS::Nova::Server
    properties:
      name: { get_param: cpm2 }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line

  cpm3:
    type: OS::Nova::Server
    properties:
      name: { get_param: cpm3 }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line

  ceph1:
    type: OS::Nova::Server
    properties:
      name: { get_param: ceph1 }
      image: { get_param: image }
      flavor: { get_param: storage_flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line

  ceph2:
    type: OS::Nova::Server
    properties:
      name: { get_param: ceph2 }
      image: { get_param: image }
      flavor: { get_param: storage_flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line

  ceph3:
    type: OS::Nova::Server
    properties:
      name: { get_param: ceph3 }
      image: { get_param: image }
      flavor: { get_param: storage_flavor }
      key_name: { get_resource: ssh_keypair }
      user_data_format: RAW
      security_groups: [{ get_resource: server_security_group }]
      networks:
        - network: { get_param: network }
      {% if ansible_env.AVAILABILITY_ZONE -%}
      availability_zone: {{ ansible_env.AVAILABILITY_ZONE }}
      {% endif -%}
      # placeholder line


### Floating IP resources and associations for servers
  {% if not use_private_ips|default('False')|bool -%}
  controller-0_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  controller-0_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: controller-0_floating_ip }
       server_id: { get_resource: controller-0 }

  controller-1_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  controller-1_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: controller-1_floating_ip }
       server_id: { get_resource: controller-1 }

  compute-0_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  compute-0_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: compute-0_floating_ip }
       server_id: { get_resource: compute-0 }

  cpm1_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  cpm1_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: cpm1_floating_ip }
       server_id: { get_resource: cpm1 }

  cpm2_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  cpm2_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: cpm2_floating_ip }
       server_id: { get_resource: cpm2 }

  cpm3_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  cpm3_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: cpm3_floating_ip }
       server_id: { get_resource: cpm3 }

  ceph1_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  ceph1_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: ceph1_floating_ip }
       server_id: { get_resource: ceph1 }

  ceph2_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  ceph2_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: ceph2_floating_ip }
       server_id: { get_resource: ceph2 }

  ceph3_floating_ip:
     type: OS::Nova::FloatingIP
     properties:
       pool: { get_param: floating_ip_pool }

  ceph3_fip_association:
     type: OS::Nova::FloatingIPAssociation
     properties:
       floating_ip: { get_resource: ceph3_floating_ip }
       server_id: { get_resource: ceph3 }
  {% endif -%}
  # placeholder line


outputs:
  private_key:
    description: Private key
    value: { get_attr: [ ssh_keypair, private_key ] }

  {% if use_private_ips|default('False')|bool -%}
  controller-0:
    description: IP address of controller-0 in provider network
    value: { get_attr: [ controller-0, first_address ] }
  controller-1:
    description: IP address of controller-1 in provider network
    value: { get_attr: [ controller-1, first_address ] }
  compute-0:
    description: IP address of compute-0 in provider network
    value: { get_attr: [ compute-0, first_address ] }
  cpm1:
    description: IP address of cpm1 in provider network
    value: { get_attr: [ cpm1, first_address ] }
  cpm2:
    description: IP address of cpm2 in provider network
    value: { get_attr: [ cpm2, first_address ] }
  cpm3:
    description: IP address of cpm3 in provider network
    value: { get_attr: [ cpm3, first_address ] }
  ceph1:
    description: IP address of ceph1 in provider network
    value: { get_attr: [ ceph1, first_address ] }
  ceph2:
    description: IP address of ceph2 in provider network
    value: { get_attr: [ ceph2, first_address ] }
  ceph3:
    description: IP address of ceph3 in provider network
    value: { get_attr: [ ceph3, first_address ] }
  {% else -%}
  controller-0:
    description: Floating IP address of controller-0
    value: { get_attr: [ controller-0_floating_ip, ip ] }
  controller-1:
    description: Floating IP address of controller-1
    value: { get_attr: [ controller-1_floating_ip, ip ] }
  compute-0:
    description: Floating IP address of compute-0
    value: { get_attr: [ compute-0_floating_ip, ip ] }
  floating_ip:
    description: Floating IP address of controller-0
    value: { get_attr: [ controller-0_floating_ip, ip ] }
  cpm1:
    description: IP address of cpm1 in provider network
    value: { get_attr: [ cpm1_floating_ip, ip ] }
  cpm2:
    description: IP address of cpm2 in provider network
    value: { get_attr: [ cpm2_floating_ip, ip ] }
  cpm3:
    description: IP address of cpm3 in provider network
    value: { get_attr: [ cpm3_floating_ip, ip ] }
  ceph1:
    description: IP address of ceph1 in provider network
    value: { get_attr: [ ceph1_floating_ip, ip ] }
  ceph2:
    description: IP address of ceph2 in provider network
    value: { get_attr: [ ceph2_floating_ip, ip ] }
  ceph3:
    description: IP address of ceph3 in provider network
    value: { get_attr: [ ceph3_floating_ip, ip ] }
  {% endif -%}
  # placeholder line
